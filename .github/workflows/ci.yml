name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.10"]
        os: [ubuntu-latest]

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        make install
        pip install coverage flake8

    - name: Run migrations
      env:
        DATABASE_URL: postgres://testuser:testpass@localhost:5432/testdb
        SECRET_KEY: testsecret
      run: |
        make migrate

    - name: Run linter
      run: make lint

    - name: Run tests
      env:
        DATABASE_URL: postgres://testuser:testpass@localhost:5432/testdb
        SECRET_KEY: testsecret
        DEBUG: "False"
      run: make test

    - name: Generate coverage report
      env:
        DATABASE_URL: postgres://testuser:testpass@localhost:5432/testdb
      run: make coverage

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: .
        args: >
          -Dsonar.projectKey=your-project-key
          -Dsonar.organization=your-organization
          -Dsonar.python.coverage.reportPaths=coverage.xml
          -Dsonar.python.flake8.reportPaths=flake8.log