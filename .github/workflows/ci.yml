name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage flake8 pytest pytest-django

    - name: Install SonarScanner
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-17-jre
        SONAR_SCANNER_VERSION="5.0.1.3006"
        wget "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_SCANNER_VERSION}-linux.zip"
        unzip "sonar-scanner-cli-${SONAR_SCANNER_VERSION}-linux.zip"
        sudo mv "sonar-scanner-${SONAR_SCANNER_VERSION}-linux" /opt/sonar-scanner
        echo "/opt/sonar-scanner/bin" >> $GITHUB_PATH

    - name: Run migrations
      env:
        DATABASE_URL: postgres://testuser:testpass@localhost:5432/testdb
        SECRET_KEY: testsecret
      run: |
        python manage.py migrate

    - name: Run linter
      run: flake8 config task_manager

    - name: Run tests
      env:
        DATABASE_URL: postgres://testuser:testpass@localhost:5432/testdb
        SECRET_KEY: testsecret
        DEBUG: "False"
      run: |
        pytest tests --verbosity=2

    - name: Generate coverage report
      env:
        DATABASE_URL: postgres://testuser:testpass@localhost:5432/testdb
      run: |
        coverage run --source='.' manage.py test task_manager
        coverage xml -i

    - name: Verify sonar-project.properties
      run: |
        echo "Updating sonar-project.properties..."
        echo 'sonar.projectKey=darthlivesey_python-project-52' > sonar-project.properties
        echo 'sonar.organization=darthlivesey' >> sonar-project.properties
        echo 'sonar.projectName=Python Project 52' >> sonar-project.properties
        echo 'sonar.sources=config,task_manager' >> sonar-project.properties
        echo 'sonar.tests=tests' >> sonar-project.properties
        echo 'sonar.sourceEncoding=UTF-8' >> sonar-project.properties
        echo 'sonar.python.coverage.reportPaths=coverage.xml' >> sonar-project.properties
        echo 'sonar.exclusions=**/.venv/**,**/staticfiles/**,**/__pycache__/**' >> sonar-project.properties
        echo 'sonar.language=py' >> sonar-project.properties
        echo 'sonar.python.version=3.10' >> sonar-project.properties

    - name: Run SonarScanner
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        sonar-scanner \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.verbose=true